Upstream-Status: Backport

From 9474ee85390166544b4219992e8891ec0ec21273 Mon Sep 17 00:00:00 2001
From: Michael Carroll <michael@openrobotics.org>
Date: Wed, 17 Aug 2022 12:32:02 -0500
Subject: [PATCH] Remainder of USE_NEW_PACKAGE_NAME updates (#324)

Further reduces the packaging diff for debian and conda.

Signed-off-by: Michael Carroll <michael@openrobotics.org>
---
 CMake/CMakeLists.txt                        |  2 +-
 CMake/ConfigureBuild.cmake                  | 45 +++++++++++----------
 CMake/InstallResources.cmake                | 12 +++---
 CMake/Templates/OGRE-Hlms.pc.in             |  8 ++--
 CMake/Templates/OGRE-MeshLodGenerator.pc.in |  8 ++--
 CMake/Templates/OGRE-Overlay.pc.in          |  8 ++--
 CMake/Templates/OGRE-Paging.pc.in           |  8 ++--
 CMake/Templates/OGRE-Property.pc.in         |  8 ++--
 CMake/Templates/OGRE-RTShaderSystem.pc.in   |  8 ++--
 CMake/Templates/OGRE-Terrain.pc.in          |  8 ++--
 CMake/Templates/OGRE-Volume.pc.in           |  8 ++--
 CMake/Templates/OGRE.pc.in                  |  8 ++--
 CMake/Utils/OgreConfigTargets.cmake         |  6 ++-
 CMakeLists.txt                              | 23 ++++++-----
 Components/Hlms/Pbs/CMakeLists.txt          |  6 ++-
 Components/Hlms/PbsMobile/CMakeLists.txt    |  2 +-
 Components/Hlms/Unlit/CMakeLists.txt        |  4 +-
 Components/Hlms/UnlitMobile/CMakeLists.txt  |  2 +-
 Components/MeshLodGenerator/CMakeLists.txt  |  2 +-
 Components/Overlay/CMakeLists.txt           |  2 +-
 Components/Paging/CMakeLists.txt            |  2 +-
 Components/PlanarReflections/CMakeLists.txt |  2 +-
 Components/Property/CMakeLists.txt          |  2 +-
 Components/RTShaderSystem/CMakeLists.txt    |  2 +-
 Components/SceneFormat/CMakeLists.txt       |  2 +-
 Components/Terrain/CMakeLists.txt           |  2 +-
 Components/Volume/CMakeLists.txt            |  2 +-
 Docs/CMakeLists.txt                         |  2 +-
 OgreMain/CMakeLists.txt                     |  8 ++--
 PlugIns/ParticleFX/CMakeLists.txt           |  2 +-
 RenderSystems/Direct3D9/CMakeLists.txt      |  2 +-
 RenderSystems/GL3Plus/CMakeLists.txt        | 12 +++---
 RenderSystems/GLES2/CMakeLists.txt          | 10 ++---
 RenderSystems/Metal/CMakeLists.txt          |  6 +--
 RenderSystems/NULL/CMakeLists.txt           |  6 +--
 RenderSystems/Vulkan/CMakeLists.txt         |  6 +--
 Samples/Media/CMakeLists.txt                |  2 +-
 37 files changed, 129 insertions(+), 119 deletions(-)

Index: git/CMake/CMakeLists.txt
===================================================================
--- git.orig/CMake/CMakeLists.txt
+++ git/CMake/CMakeLists.txt
@@ -16,7 +16,7 @@
 if(WIN32 OR APPLE)
 	set(OGRE_CMAKE_DIR "CMake")
 else()
-	set(OGRE_CMAKE_DIR "${OGRE_LIB_DIRECTORY}/OGRE/cmake")
+  set(OGRE_CMAKE_DIR "${OGRE_LIB_DIRECTORY}/${OGRE_NEXT_PREFIX}/cmake")
 endif()
 
 set(INST_FILES
Index: git/CMake/ConfigureBuild.cmake
===================================================================
--- git.orig/CMake/ConfigureBuild.cmake
+++ git/CMake/ConfigureBuild.cmake
@@ -244,7 +244,7 @@ endif()
 # generate OgreBuildSettings.h
 configure_file(${OGRE_TEMPLATES_DIR}/OgreBuildSettings.h.in ${OGRE_BINARY_DIR}/include/OgreBuildSettings.h @ONLY)
 configure_file(${OGRE_TEMPLATES_DIR}/OgreGL3PlusBuildSettings.h.in ${OGRE_BINARY_DIR}/include/OgreGL3PlusBuildSettings.h @ONLY)
-install(FILES ${OGRE_BINARY_DIR}/include/OgreBuildSettings.h DESTINATION include/OGRE)
+install(FILES ${OGRE_BINARY_DIR}/include/OgreBuildSettings.h DESTINATION include/${OGRE_NEXT_PREFIX})
 
 
 # Create the pkg-config package files on Unix systems
@@ -275,55 +275,55 @@ if (UNIX)
     endif ()
     # there is no pkgconfig file for freeimage, so we need to add that lib manually
     set(OGRE_ADDITIONAL_LIBS "${OGRE_ADDITIONAL_LIBS} -lfreeimage")
-    configure_file(${OGRE_TEMPLATES_DIR}/OGREStatic.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE.pc @ONLY)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGREStatic.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}.pc @ONLY)
   else ()
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE.pc @ONLY)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}.pc @ONLY)
   endif ()
-  install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+  install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
 
   # configure additional packages
 
   if (OGRE_BUILD_COMPONENT_PAGING)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Paging.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Paging.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Paging.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Paging.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Paging.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Paging.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
   if (OGRE_BUILD_COMPONENT_MESHLODGENERATOR)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-MeshLodGenerator.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-MeshLodGenerator.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-MeshLodGenerator.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-MeshLodGenerator.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-MeshLodGenerator.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-MeshLodGenerator.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
   
   if (OGRE_BUILD_COMPONENT_TERRAIN)
     if (OGRE_BUILD_COMPONENT_PAGING)
-      set(OGRE_PAGING_ADDITIONAL_PACKAGES ", OGRE-Paging = ${OGRE_VERSION}")
+      set(OGRE_PAGING_ADDITIONAL_PACKAGES ", ${OGRE_NEXT_PREFIX}-Paging = ${OGRE_VERSION}")
     endif ()
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Terrain.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Terrain.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Terrain.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Terrain.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Terrain.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Terrain.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
   if (OGRE_BUILD_COMPONENT_RTSHADERSYSTEM)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-RTShaderSystem.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-RTShaderSystem.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-RTShaderSystem.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-RTShaderSystem.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-RTShaderSystem.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-RTShaderSystem.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
   if (OGRE_BUILD_COMPONENT_PROPERTY)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Property.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Property.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Property.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Property.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Property.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Property.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
   if (OGRE_BUILD_COMPONENT_OVERLAY)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Overlay.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Overlay.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Overlay.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Overlay.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Overlay.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Overlay.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
   if (OGRE_BUILD_COMPONENT_VOLUME)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Volume.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Volume.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Volume.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Volume.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Volume.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Volume.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
   if (OGRE_BUILD_COMPONENT_HLMS)
-    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Hlms.pc.in ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Hlms.pc @ONLY)
-    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/OGRE-Hlms.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
+    configure_file(${OGRE_TEMPLATES_DIR}/OGRE-Hlms.pc.in ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Hlms.pc @ONLY)
+    install(FILES ${OGRE_BINARY_DIR}/pkgconfig/${OGRE_NEXT_PREFIX}-Hlms.pc DESTINATION ${OGRE_LIB_DIRECTORY}/pkgconfig)
   endif ()
 
 endif ()
Index: git/CMake/InstallResources.cmake
===================================================================
--- git.orig/CMake/InstallResources.cmake
+++ git/CMake/InstallResources.cmake
@@ -55,16 +55,16 @@ elseif (APPLE)
   set(OGRE_SAMPLES_DIR_DBG "")
   set(OGRE_CFG_INSTALL_PATH "bin")
 elseif (UNIX)
-  set(OGRE_MEDIA_PATH "share/OGRE/Media")
+  set(OGRE_MEDIA_PATH "share/${OGRE_NEXT_PREFIX}/Media")
   set(OGRE_MEDIA_DIR_REL "${CMAKE_INSTALL_PREFIX}/${OGRE_MEDIA_PATH}")
   set(OGRE_MEDIA_DIR_DBG "${CMAKE_INSTALL_PREFIX}/${OGRE_MEDIA_PATH}")
   set(OGRE_TEST_MEDIA_DIR_REL "${CMAKE_INSTALL_PREFIX}/Tests/Media")
   set(OGRE_TEST_MEDIA_DIR_DBG "${CMAKE_INSTALL_PREFIX}/Tests/Media")
-  set(OGRE_PLUGIN_DIR_REL "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/OGRE")
-  set(OGRE_PLUGIN_DIR_DBG "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/OGRE")
-  set(OGRE_SAMPLES_DIR_REL "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/OGRE/Samples")
-  set(OGRE_SAMPLES_DIR_DBG "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/OGRE/Samples")
-  set(OGRE_CFG_INSTALL_PATH "share/OGRE")
+  set(OGRE_PLUGIN_DIR_REL "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/${OGRE_NEXT_PREFIX}")
+  set(OGRE_PLUGIN_DIR_DBG "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/${OGRE_NEXT_PREFIX}")
+  set(OGRE_SAMPLES_DIR_REL "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/${OGRE_NEXT_PREFIX}/Samples")
+  set(OGRE_SAMPLES_DIR_DBG "${CMAKE_INSTALL_PREFIX}/${OGRE_LIB_DIRECTORY}/${OGRE_NEXT_PREFIX}/Samples")
+  set(OGRE_CFG_INSTALL_PATH "share/${OGRE_NEXT_PREFIX}")
 endif ()
 
 if( APPLE )
Index: git/CMake/Templates/OGRE-Hlms.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-Hlms.pc.in
+++ git/CMake/Templates/OGRE-Hlms.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-Hlms
+Name: @OGRE_NEXT_PREFIX@-Hlms
 Description: HLMS component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgreHlmsPbs@OGRE_LIB_SUFFIX@ -lOgreHlmsUnlit@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/Hlms @OGRE_CFLAGS@
\ No newline at end of file
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@HlmsPbs@OGRE_LIB_SUFFIX@ -l@OGRE_NEXT@HlmsUnlit@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/Hlms @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-MeshLodGenerator.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-MeshLodGenerator.pc.in
+++ git/CMake/Templates/OGRE-MeshLodGenerator.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-MeshLodGenerator
+Name: @OGRE_NEXT_PREFIX@-MeshLodGenerator
 Description: Mesh Lod Generator for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgreMeshLodGenerator@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/MeshLodGenerator @OGRE_CFLAGS@
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@MeshLodGenerator@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/MeshLodGenerator @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-Overlay.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-Overlay.pc.in
+++ git/CMake/Templates/OGRE-Overlay.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-Overlay
+Name: @OGRE_NEXT_PREFIX@-Overlay
 Description: Overlay component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgreOverlay@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/Overlay @OGRE_CFLAGS@
\ No newline at end of file
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@Overlay@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/Overlay @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-Paging.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-Paging.pc.in
+++ git/CMake/Templates/OGRE-Paging.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-Paging
+Name: @OGRE_NEXT_PREFIX@-Paging
 Description: General purpose paging component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgrePaging@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/Paging @OGRE_CFLAGS@
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@Paging@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/Paging @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-Property.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-Property.pc.in
+++ git/CMake/Templates/OGRE-Property.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-Property
+Name: @OGRE_NEXT_PREFIX@-Property
 Description: General purpose property component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgreProperty@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/Property @OGRE_CFLAGS@
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@Property@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/Property @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-RTShaderSystem.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-RTShaderSystem.pc.in
+++ git/CMake/Templates/OGRE-RTShaderSystem.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-RTShaderSystem
+Name: @OGRE_NEXT_PREFIX@-RTShaderSystem
 Description: Real time shader generation component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgreRTShaderSystem@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/RTShaderSystem @OGRE_CFLAGS@
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@RTShaderSystem@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/RTShaderSystem @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-Terrain.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-Terrain.pc.in
+++ git/CMake/Templates/OGRE-Terrain.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-Terrain
+Name: @OGRE_NEXT_PREFIX@-Terrain
 Description: Outdoor terrain component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@ @OGRE_PAGING_ADDITIONAL_PACKAGES@
-Libs: -L${libdir} -lOgreTerrain@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/Terrain @OGRE_CFLAGS@
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@ @OGRE_PAGING_ADDITIONAL_PACKAGES@
+Libs: -L${libdir} -l@OGRE_NEXT@Terrain@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/Terrain @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE-Volume.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE-Volume.pc.in
+++ git/CMake/Templates/OGRE-Volume.pc.in
@@ -3,9 +3,9 @@ exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
 
-Name: OGRE-Volume
+Name: @OGRE_NEXT_PREFIX@-Volume
 Description: Voxel based terrain component for OGRE
 Version: @OGRE_VERSION@
-Requires: OGRE = @OGRE_VERSION@
-Libs: -L${libdir} -lOgreVolume@OGRE_LIB_SUFFIX@
-Cflags: -I${includedir}/OGRE/Volume @OGRE_CFLAGS@
+Requires: @OGRE_NEXT_PREFIX@ = @OGRE_VERSION@
+Libs: -L${libdir} -l@OGRE_NEXT@Volume@OGRE_LIB_SUFFIX@
+Cflags: -I${includedir}/@OGRE_NEXT_PREFIX@/Volume @OGRE_CFLAGS@
Index: git/CMake/Templates/OGRE.pc.in
===================================================================
--- git.orig/CMake/Templates/OGRE.pc.in
+++ git/CMake/Templates/OGRE.pc.in
@@ -2,11 +2,11 @@ prefix=@OGRE_PREFIX_PATH@
 exec_prefix=${prefix}
 libdir=${prefix}/@OGRE_LIB_DIRECTORY@
 includedir=${prefix}/include
-plugindir=${libdir}/OGRE
+plugindir=${libdir}/@OGRE_NEXT_PREFIX@
 
-Name: OGRE
+Name: @OGRE_NEXT_PREFIX@ 
 Description: Object-Oriented Graphics Rendering Engine
 Version: @OGRE_VERSION@
 URL: http://www.ogre3d.org
-Libs: -L${libdir} -lOgreMain@OGRE_LIB_SUFFIX@ @OGRE_ADDITIONAL_LIBS@
-Cflags: -I${includedir} -I${includedir}/OGRE @OGRE_CFLAGS@
+Libs: -L${libdir} -l@OGRE_NEXT@Main@OGRE_LIB_SUFFIX@ @OGRE_ADDITIONAL_LIBS@
+Cflags: -I${includedir} -I${includedir}/@OGRE_NEXT_PREFIX@ @OGRE_CFLAGS@
Index: git/CMake/Utils/OgreConfigTargets.cmake
===================================================================
--- git.orig/CMake/Utils/OgreConfigTargets.cmake
+++ git/CMake/Utils/OgreConfigTargets.cmake
@@ -67,9 +67,9 @@ elseif (UNIX)
   if (APPLE)
     set(OGRE_PLUGIN_PATH "/")
   else()
-    set(OGRE_PLUGIN_PATH "/OGRE")
+    set(OGRE_PLUGIN_PATH "/${OGRE_NEXT_PREFIX}")
   endif(APPLE)
-  set(OGRE_SAMPLE_PATH "/OGRE/Samples")
+  set(OGRE_SAMPLE_PATH "/${OGRE_NEXT_PREFIX}/Samples")
 endif ()
 
 # create vcproj.user file for Visual Studio to set debug working directory
@@ -95,6 +95,8 @@ function(ogre_install_target TARGETNAME
 		return()
 	endif()
 
+  message(STATUS "Installing target: ${TARGETNAME} ${SUFFIX} ${EXPORT}")
+
 	if(EXPORT)
 	  install(TARGETS ${TARGETNAME} #EXPORT Ogre-exports
 		BUNDLE DESTINATION "bin${OGRE_RELEASE_PATH}" CONFIGURATIONS Release None ""
Index: git/CMakeLists.txt
===================================================================
--- git.orig/CMakeLists.txt
+++ git/CMakeLists.txt
@@ -49,6 +49,19 @@ if (APPLE AND NOT ANDROID)
   set(CMAKE_XCODE_ATTRIBUTE_USE_HEADERMAP NO)
 endif ()
 
+# This option needs to be set now
+# OgreAddTargets and OgreConfigTargets make use of OGRE_NEXT and OGRE_NEXT_PREFIX
+option(OGRE_USE_NEW_PROJECT_NAME
+	"Libraries containing Ogre name will be called OgreNext, e.g. 'OgreNext.dll' instead of 'Ogre.dll'"
+	FALSE)
+
+if( OGRE_USE_NEW_PROJECT_NAME )
+	set( OGRE_NEXT "OgreNext" )
+  set( OGRE_NEXT_PREFIX "OGRE-Next")
+else()
+	set( OGRE_NEXT "Ogre" )
+  set( OGRE_NEXT_PREFIX "OGRE" )
+endif()
 
 project(OGRE)
 
Index: git/Components/Hlms/Pbs/CMakeLists.txt
===================================================================
--- git.orig/Components/Hlms/Pbs/CMakeLists.txt
+++ git/Components/Hlms/Pbs/CMakeLists.txt
@@ -52,12 +52,12 @@ ogre_config_framework(${OGRE_NEXT}HlmsPb
 ogre_config_component(${OGRE_NEXT}HlmsPbs)
 
 install (DIRECTORY include/
-        DESTINATION include/OGRE/Hlms/Pbs
+        DESTINATION include/${OGRE_NEXT_PREFIX}/Hlms/Pbs
         FILES_MATCHING PATTERN "*.h"
         )
 
 # also install HLMS Common folder
 install (DIRECTORY ../Common/include/
-        DESTINATION include/OGRE/Hlms/Common
+        DESTINATION include/${OGRE_NEXT_PREFIX}/Hlms/Common
         FILES_MATCHING PATTERN "*.h" PATTERN "*.inl"
         )
Index: git/Components/Hlms/PbsMobile/CMakeLists.txt
===================================================================
--- git.orig/Components/Hlms/PbsMobile/CMakeLists.txt
+++ git/Components/Hlms/PbsMobile/CMakeLists.txt
@@ -24,5 +24,5 @@ ogre_config_framework(OgreHlmsPbsMobile)
 ogre_config_component(OgreHlmsPbsMobile)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Hlms/PbsMobile
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Hlms/PbsMobile
 )
Index: git/Components/Hlms/Unlit/CMakeLists.txt
===================================================================
--- git.orig/Components/Hlms/Unlit/CMakeLists.txt
+++ git/Components/Hlms/Unlit/CMakeLists.txt
@@ -34,12 +34,12 @@ ogre_config_framework(${OGRE_NEXT}HlmsUn
 ogre_config_component(${OGRE_NEXT}HlmsUnlit)
 
 install (DIRECTORY include/
-        DESTINATION include/OGRE/Hlms/Unlit
+        DESTINATION include/${OGRE_NEXT_PREFIX}/Hlms/Unlit
         FILES_MATCHING PATTERN "*.h"
         )
 
 # also install HLMS Common folder
 install (DIRECTORY ../Common/include/
-        DESTINATION include/OGRE/Hlms/Common
+        DESTINATION include/${OGRE_NEXT_PREFIX}/Hlms/Common
         FILES_MATCHING PATTERN "*.h" PATTERN "*.inl"
         )
Index: git/Components/Hlms/UnlitMobile/CMakeLists.txt
===================================================================
--- git.orig/Components/Hlms/UnlitMobile/CMakeLists.txt
+++ git/Components/Hlms/UnlitMobile/CMakeLists.txt
@@ -24,5 +24,5 @@ ogre_config_framework(OgreHlmsUnlitMobil
 ogre_config_component(OgreHlmsUnlitMobile)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Hlms/UnlitMobile
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Hlms/UnlitMobile
 )
Index: git/Components/MeshLodGenerator/CMakeLists.txt
===================================================================
--- git.orig/Components/MeshLodGenerator/CMakeLists.txt
+++ git/Components/MeshLodGenerator/CMakeLists.txt
@@ -37,5 +37,5 @@ ogre_config_framework(${OGRE_NEXT}MeshLo
 ogre_config_component(${OGRE_NEXT}MeshLodGenerator)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/MeshLodGenerator
+  DESTINATION include/${OGRE_NEXT_PREFIX}/MeshLodGenerator
 )
Index: git/Components/Overlay/CMakeLists.txt
===================================================================
--- git.orig/Components/Overlay/CMakeLists.txt
+++ git/Components/Overlay/CMakeLists.txt
@@ -41,6 +41,6 @@ ogre_config_framework(${OGRE_NEXT}Overla
 ogre_config_component(${OGRE_NEXT}Overlay)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Overlay
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Overlay
 )
 
Index: git/Components/Paging/CMakeLists.txt
===================================================================
--- git.orig/Components/Paging/CMakeLists.txt
+++ git/Components/Paging/CMakeLists.txt
@@ -37,5 +37,5 @@ ogre_config_framework(OgrePaging)
 ogre_config_component(OgrePaging)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Paging
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Paging
 )
Index: git/Components/PlanarReflections/CMakeLists.txt
===================================================================
--- git.orig/Components/PlanarReflections/CMakeLists.txt
+++ git/Components/PlanarReflections/CMakeLists.txt
@@ -31,5 +31,5 @@ ogre_config_framework(${OGRE_NEXT}Planar
 ogre_config_component(${OGRE_NEXT}PlanarReflections)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/PlanarReflections
+  DESTINATION include/${OGRE_NEXT_PREFIX}/PlanarReflections
 )
Index: git/Components/Property/CMakeLists.txt
===================================================================
--- git.orig/Components/Property/CMakeLists.txt
+++ git/Components/Property/CMakeLists.txt
@@ -45,6 +45,6 @@ ogre_config_framework(OgreProperty)
 ogre_config_component(OgreProperty)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Property
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Property
 )
 
Index: git/Components/RTShaderSystem/CMakeLists.txt
===================================================================
--- git.orig/Components/RTShaderSystem/CMakeLists.txt
+++ git/Components/RTShaderSystem/CMakeLists.txt
@@ -24,5 +24,5 @@ ogre_config_framework(OgreRTShaderSystem
 ogre_config_component(OgreRTShaderSystem)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/RTShaderSystem
+  DESTINATION include/${OGRE_NEXT_PREFIX}/RTShaderSystem
 )
Index: git/Components/SceneFormat/CMakeLists.txt
===================================================================
--- git.orig/Components/SceneFormat/CMakeLists.txt
+++ git/Components/SceneFormat/CMakeLists.txt
@@ -34,5 +34,5 @@ ogre_config_framework(${OGRE_NEXT}SceneF
 ogre_config_component(${OGRE_NEXT}SceneFormat)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/SceneFormat
+  DESTINATION include/${OGRE_NEXT_PREFIX}/SceneFormat
 )
Index: git/Components/Terrain/CMakeLists.txt
===================================================================
--- git.orig/Components/Terrain/CMakeLists.txt
+++ git/Components/Terrain/CMakeLists.txt
@@ -60,6 +60,6 @@ ogre_config_framework(OgreTerrain)
 ogre_config_component(OgreTerrain)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Terrain
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Terrain
 )
 
Index: git/Components/Volume/CMakeLists.txt
===================================================================
--- git.orig/Components/Volume/CMakeLists.txt
+++ git/Components/Volume/CMakeLists.txt
@@ -38,6 +38,6 @@ ogre_config_framework(OgreVolume)
 ogre_config_component(OgreVolume)
 
 install(FILES ${HEADER_FILES}
-  DESTINATION include/OGRE/Volume
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Volume
 )
 
Index: git/Docs/CMakeLists.txt
===================================================================
--- git.orig/Docs/CMakeLists.txt
+++ git/Docs/CMakeLists.txt
@@ -16,7 +16,7 @@
 if (WIN32 OR APPLE)
   set(OGRE_DOCS_PATH "Docs")
 elseif (UNIX)
-  set(OGRE_DOCS_PATH "share/OGRE/docs")
+  set(OGRE_DOCS_PATH "share/${OGRE_NEXT_PREFIX}/docs")
 endif ()
   
 # Build and install API documentation if doxygen is available
Index: git/OgreMain/CMakeLists.txt
===================================================================
--- git.orig/OgreMain/CMakeLists.txt
+++ git/OgreMain/CMakeLists.txt
@@ -496,14 +496,14 @@ ogre_config_lib(${OGRE_NEXT}Main TRUE)
 foreach(HEADER_FILE ${HEADER_FILES})
 	string(REGEX REPLACE "((${CMAKE_CURRENT_SOURCE_DIR}|${OGRE_BINARY_DIR})/)?(include|src)/" "" RELATIVE_HEADER_FILE ${HEADER_FILE})
 	string(REGEX MATCH "((.*)/)+" HEADER_SUBDIRECTORY ${RELATIVE_HEADER_FILE})
-	install(FILES ${HEADER_FILE} DESTINATION include/OGRE/${HEADER_SUBDIRECTORY})
+  install(FILES ${HEADER_FILE} DESTINATION include/${OGRE_NEXT_PREFIX}/${HEADER_SUBDIRECTORY})
 endforeach()
 
 install(FILES ${PLATFORM_HEADERS}
-  DESTINATION include/OGRE/${PLATFORM_HEADER_INSTALL}
+  DESTINATION include/${OGRE_NEXT_PREFIX}/${PLATFORM_HEADER_INSTALL}
 )
 install(FILES ${THREAD_HEADER_FILES}
-	DESTINATION include/OGRE/Threading
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Threading
 )
 
 set( DEPRECATED_HEADER_FILES
@@ -526,5 +526,5 @@ set( DEPRECATED_HEADER_FILES
 )
 
 install(FILES ${DEPRECATED_HEADER_FILES}
-  DESTINATION include/OGRE/Deprecated
+  DESTINATION include/${OGRE_NEXT_PREFIX}/Deprecated
 )
Index: git/PlugIns/ParticleFX/CMakeLists.txt
===================================================================
--- git.orig/PlugIns/ParticleFX/CMakeLists.txt
+++ git/PlugIns/ParticleFX/CMakeLists.txt
@@ -27,5 +27,5 @@ endif ()
 ogre_config_framework(Plugin_ParticleFX)
 
 ogre_config_plugin(Plugin_ParticleFX)
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/Plugins/ParticleFX)
+install(FILES ${HEADER_FILES} DESTINATION include/${OGRE_NEXT_PREFIX}/Plugins/ParticleFX)
 
Index: git/RenderSystems/Direct3D9/CMakeLists.txt
===================================================================
--- git.orig/RenderSystems/Direct3D9/CMakeLists.txt
+++ git/RenderSystems/Direct3D9/CMakeLists.txt
@@ -47,4 +47,4 @@ if(OGRE_CONFIG_ENABLE_QUAD_BUFFER_STEREO
 endif()
 
 ogre_config_plugin(RenderSystem_Direct3D9)
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/RenderSystems/Direct3D9)
+install(FILES ${HEADER_FILES} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/Direct3D9)
Index: git/RenderSystems/GL3Plus/CMakeLists.txt
===================================================================
--- git.orig/RenderSystems/GL3Plus/CMakeLists.txt
+++ git/RenderSystems/GL3Plus/CMakeLists.txt
@@ -123,15 +123,15 @@ endif ()
 ogre_config_framework(RenderSystem_GL3Plus)
 
 ogre_config_plugin(RenderSystem_GL3Plus)
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/RenderSystems/GL3Plus)
+install(FILES ${HEADER_FILES} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GL3Plus)
 if( OGRE_GLSUPPORT_USE_GLX )
-	install(FILES ${PLATFORM_HEADERS_GLX} DESTINATION include/OGRE/RenderSystems/GL3Plus/GLX)
+	install(FILES ${PLATFORM_HEADERS_GLX} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GL3Plus/GLX)
 endif()
 if( OGRE_GLSUPPORT_USE_COCOA )
-	install(FILES ${PLATFORM_HEADERS_OSX} DESTINATION include/OGRE/RenderSystems/GL3Plus/OSX)
+	install(FILES ${PLATFORM_HEADERS_OSX} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GL3Plus/OSX)
 endif()
 if( OGRE_GLSUPPORT_USE_EGL_HEADLESS )
-	install(FILES ${PLATFORM_HEADERS_EGL} DESTINATION include/OGRE/RenderSystems/GL3Plus/EGL)
+	install(FILES ${PLATFORM_HEADERS_EGL} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GL3Plus/EGL)
 endif()
-install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/ DESTINATION include/OGRE/RenderSystems/GL3Plus)
-install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/GLSL/ DESTINATION include/OGRE/RenderSystems/GL3Plus)
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/ DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GL3Plus)
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/GLSL/ DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GL3Plus)
Index: git/RenderSystems/GLES2/CMakeLists.txt
===================================================================
--- git.orig/RenderSystems/GLES2/CMakeLists.txt
+++ git/RenderSystems/GLES2/CMakeLists.txt
@@ -130,8 +130,8 @@ endif ()
 
 ogre_config_plugin(RenderSystem_GLES2)
 
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/RenderSystems/GLES2)
-install(FILES ${PLATFORM_HEADERS} DESTINATION include/OGRE/RenderSystems/GLES2/${PLATFORM_HEADER_INSTALL})
-install(FILES ${GLESW_HEADERS} DESTINATION include/OGRE/RenderSystems/GLES2/${GLESW_HEADER_INSTALL})
-install(FILES ${KHR_HEADERS} DESTINATION include/OGRE/RenderSystems/GLES2/KHR)
-install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src/GLSLES/include/ DESTINATION include/OGRE/RenderSystems/GLES2/GLSLES)
+install(FILES ${HEADER_FILES} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GLES2)
+install(FILES ${PLATFORM_HEADERS} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GLES2/${PLATFORM_HEADER_INSTALL})
+install(FILES ${GLESW_HEADERS} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GLES2/${GLESW_HEADER_INSTALL})
+install(FILES ${KHR_HEADERS} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GLES2/KHR)
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src/GLSLES/include/ DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/GLES2/GLSLES)
Index: git/RenderSystems/Metal/CMakeLists.txt
===================================================================
--- git.orig/RenderSystems/Metal/CMakeLists.txt
+++ git/RenderSystems/Metal/CMakeLists.txt
@@ -39,6 +39,6 @@ endif ()
 ogre_config_framework(RenderSystem_Metal)
 
 ogre_config_plugin(RenderSystem_Metal)
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/RenderSystems/Metal)
-install(FILES ${PLATFORM_HEADERS} DESTINATION include/OGRE/RenderSystems/Metal/${PLATFORM_HEADER_INSTALL})
-install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include DESTINATION include/OGRE/RenderSystems/Metal)
+install(FILES ${HEADER_FILES} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/Metal)
+install(FILES ${PLATFORM_HEADERS} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/Metal/${PLATFORM_HEADER_INSTALL})
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/Metal)
Index: git/RenderSystems/NULL/CMakeLists.txt
===================================================================
--- git.orig/RenderSystems/NULL/CMakeLists.txt
+++ git/RenderSystems/NULL/CMakeLists.txt
@@ -26,6 +26,6 @@ endif ()
 ogre_config_framework(RenderSystem_NULL)
 
 ogre_config_plugin(RenderSystem_NULL)
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/RenderSystems/NULL)
-install(FILES ${PLATFORM_HEADERS} DESTINATION include/OGRE/RenderSystems/NULL/${PLATFORM_HEADER_INSTALL})
-install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include DESTINATION include/OGRE/RenderSystems/NULL)
+install(FILES ${HEADER_FILES} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/NULL)
+install(FILES ${PLATFORM_HEADERS} DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/NULL/${PLATFORM_HEADER_INSTALL})
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include DESTINATION include/${OGRE_NEXT_PREFIX}/RenderSystems/NULL)
Index: git/Samples/Media/CMakeLists.txt
===================================================================
--- git.orig/Samples/Media/CMakeLists.txt
+++ git/Samples/Media/CMakeLists.txt
@@ -17,7 +17,7 @@ if (WIN32)
 elseif (APPLE)
   set(OGRE_MEDIA_PATH "Media")
 elseif (UNIX)
-  set(OGRE_MEDIA_PATH "share/OGRE/Media")
+  set(OGRE_MEDIA_PATH "share/${OGRE_NEXT_PREFIX}/Media")
 endif ()
 
 install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/
